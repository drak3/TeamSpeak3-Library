<?php

namespace devmx\Teamspeak3\Query\Transport\Decorator;
use devmx\Teamspeak3\Query\Transport\QueryTransportStub;
use devmx\Teamspeak3\Query\Command;
use devmx\Teamspeak3\Query\Response\CommandResponse;

require_once dirname( __FILE__ ) . '/../../../../../../../src/devmx/Teamspeak3/Query/Transport/Decorator/TickingDecorator.php';

class MockedTickingDecorator extends TickingDecorator {
    
    protected $sleptTime = 0;
    protected $time;
    
    protected function sleep($time) {
        $this->sleptTime += (int) $time;
    }
    
    public function getSleptTime() {
        return $this->sleptTime;
    }
    
    protected function getTime() {
        return $this->time;
    }
    
    public function setTime($time) {
        $this->time = $time;
    }
}

/**
 * Test class for TickingDecorator.
 * Generated by PHPUnit on 2012-01-28 at 21:57:32.
 */
class TickingDecoratorTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var devmx\Teamspeak3\Query\Transport\Decorator\TickingDecorator
     */
    protected $ticker;
    
    /**
     * devmx\Teamspeak3\Query\Transport\QueryTransportStub 
     */
    protected $stub;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->stub = new QueryTransportStub();
        $this->ticker = new MockedTickingDecorator($this->stub);
    }

    /**
     * @covers devmx\Teamspeak3\Query\Transport\Decorator\TickingDecorator::sendCommand
     * @covers devmx\Teamspeak3\Query\Transport\Decorator\TickingDecorator::setTickTime
     */
    public function testSendCommand_simple() {
        $r = new CommandResponse(new Command('foo'));
        $this->stub->addResponse($r, 2);
        $this->ticker->setTickTime(5);
        $this->ticker->connect();
        $this->ticker->setTime(\microtime(true));
        $this->assertEquals($r, $this->ticker->sendCommand(new Command('foo'))); //first command does not trigger ticking
        $this->assertEquals($r, $this->ticker->sendCommand(new Command('foo')));
        $this->assertEquals(5, $this->ticker->getSleptTime());
    }
    
    /**
     *@covers  devmx\Teamspeak3\Query\Transport\Decorator\TickingDecorator::sendCommand
     */
    public function testSendCommand_withDelay() {
        $r = new CommandResponse(new Command('foo'));
        $this->stub->addResponse($r, 2);
        $this->ticker->setTickTime(5);
        $this->ticker->connect();
        $current = \microtime(true);
        $this->ticker->setTime($current);
        $this->assertEquals($r, $this->ticker->sendCommand(new Command('foo'))); //first command does not trigger ticking
        $this->ticker->setTime($current+2);
        $this->assertEquals($r, $this->ticker->sendCommand(new Command('foo')));
        $this->assertEquals(3, $this->ticker->getSleptTime());
    }
    
    public function testSetGetTickTime() {
        $this->ticker->setTickTime(12);
        $this->assertEquals(12, $this->ticker->getTickTime());
    }
    

    
}

?>
