<?php

namespace devmx\Teamspeak3\Query\Transport\Common;
use devmx\Teamspeak3\Query\Command;

/**
 * Test class for HelpAwareResponseHandler.
 * Generated by PHPUnit on 2012-06-04 at 21:16:05.
 */
class HelpAwareResponseHandlerTest extends \PHPUnit_Framework_TestCase
{

    public function testHelpDetection() {
        $handler = new HelpAwareResponseHandler();
        $helpCommand = new Command('help');
        $helpText = <<<'EOF'
Usage: servernotifyregister [id={channelID}] 
        event={server|channel|textserver|textchannel|textprivate}

Registers for a specified category of events on a virtual server to receive 
notification messages. Depending on the notifications you've registered for, 
the server will send you a message on every event in the view of your 
ServerQuery client (e.g. clients joining your channel, incoming text messages, 
server configuration changes, etc). The event source is declared by the event 
parameter while id can be used to limit the notifications to a specific channel.

Example:
   servernotifyregister event=server
   error id=11 msg=jkl
   
   servernotifyregister event=channel id=123
   error id=12 msg=asdf
EOF;
        $responseData = $helpText . "\n\nerror id=0 msg=ok\n";
        $responses = $handler->getResponseInstance($helpCommand , $responseData);
        $this->assertEquals(array(), $responses['events']);
        $this->assertInstanceOf('\devmx\Teamspeak3\Query\Response\HelpResponse', $responses['response']);
        $response = $responses['response'];
        $this->assertEquals($helpText, $response->getHelpText());
        $this->assertEquals(0, $response->getErrorID());
        $this->assertEquals('ok', $response->getErrorMessage());
    }
    
    public function testHelpDetection_noHelpCommand() {
        $handler = new HelpAwareResponseHandler();
        $command = new Command('use');
        $response = "error id=0 msg=ok\n";
        $responses = $handler->getResponseInstance($command, $response);
        $this->assertInstanceOf('\devmx\Teamspeak3\Query\Response\CommandResponse', $responses['response']);
    }
 
}

?>
